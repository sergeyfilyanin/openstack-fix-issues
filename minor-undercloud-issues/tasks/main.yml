 - name: Tuning tripleo-client timeout
   become: true
   become_user: root
   ansible.builtin.replace:
     path: /usr/lib/python2.7/site-packages/tripleoclient/plugin.py
     regexp: '10000'
     replace: '43200'

 - name: Tuning keystone timeout 
   ansible.builtin.shell: |
     sudo crudini --set /etc/keystone/keystone.conf token expiration 14400
     sudo systemctl restart httpd

 - name: Create keystone_token.yaml 
   ansible.builtin.shell: |
     touch /home/stack/templates/keystone_token.yaml
     
 - name: Keystone_token_expiration 
   ansible.builtin.blockinfile:
     path: /home/stack/templates/keystone_token.yaml
     block: |
       parameter_defaults:
         ControllerExtraConfig:
           keystone::token_expiration: 14400

### Neutron image issue undercloud

 - name: Create neutron-fix-modify-images.yaml
   ansible.builtin.shell: |
     touch /home/stack/neutron-fix-modify-images.yaml
     
 - name: Add neutron-fix-modify-images.yaml
   ansible.builtin.blockinfile:
     path: /home/stack/neutron-fix-modify-images.yaml
     block: |
       "- hosts: undercloud
         serial: 1
         vars:
           - stack_name: overcloud
         tasks:
           - name: Get the environment output
             command: "openstack --os-cloud undercloud stack environment show {{ stack_name }}"
             register: os_env_cmd
           - name: save the environment as a hash
             set_fact:
               os_env: "{{ os_env_cmd.stdout | from_yaml }}"
           - name: Get dhcp image
             set_fact:
               images:
               - dhcp_image: "{{ os_env['parameter_defaults']['DockerNeutronDHCPImage'] }}"
               - l3_image: "{{ os_env['parameter_defaults']['DockerNeutronL3AgentImage'] }}"
               - meta_image:  "{{ os_env['parameter_defaults']['DockerNeutronMetadataImage'] }}"
           - name: Save it locally for retrieval for overcloud tasks
             copy:
               content: "{{ images | to_json }}"
               dest: /home/stack/os_neutron_images_to_fix.json
           - name: Create scripts to re-build the images, same name with new rpm.
             copy:
               content: |
                 #!/bin/bash
                 set -eu
                 echo "Doing {{ item.keys()|first }}"
                 /home/stack/osp13-patch-container-with-rpms.sh -n {{ item.values()|first }} -f {{ item.values()|first }} -d /home/stack/neutron_fix
               dest: "/home/stack/osp13-rebuild-{{ item.keys()|first }}.sh"
               mode: "0755"
             loop: "{{ images }}"
           - name: Run scripts to re-build the images, same name with new rpm.
             shell: "/home/stack/osp13-rebuild-{{ item.keys()|first }}.sh 2>&1 | tee /home/stack/osp13-rebuild-{{ item.keys()|first }}.log"
             loop: "{{ images }}" "

#- name: Run playbook neutron-fix-modify-images.yaml 
#  ansible.builtin.shell: |
#    ansible-playbook -i inventory.yaml /home/stack/neutron-fix-modify-images.yaml
    
### Neutron image issue for overcloud

 - name: Create pull.yaml
   ansible.builtin.shell: |
     touch /home/stack/pull.yaml
     
 - name: Create pull.yaml  
   ansible.builtin.blockinfile:
     path: /home/stack/pull.yaml
     block: |
       - hosts: overcloud
         become: true
         serial: 25
         gather_facts: true
         tasks:
           - block:
               - name: Load the images name in memory.
                 register: images_cmd
                 local_action: command cat /home/stack/os_neutron_images_to_fix.json
               - name: Get the images name.
                 set_fact:
                   images: "{{ images_cmd.stdout | from_json }}"
                 when: ansible_local.netns.netns_issue|bool
               - name: Pull hotfix images on affected nodes
                 command: "docker pull {{ item.values()|first }}"
                 when: ansible_local.netns.netns_issue|bool
                 loop: "{{ images }}"
             when: ansible_local.netns.netns_issue|bool

#- name: Run playbook pull.yaml 
#  ansible.builtin.shell: |
#    ansible-playbook -i inventory.yaml /home/stack/pull.yaml

 - name: Create affect_overcloud_node.yaml
   ansible.builtin.shell: |
     touch /home/stack/affect_overcloud_node.yaml
     
 - name: Create affect_overcloud_node.yaml  
   ansible.builtin.blockinfile:
     path: /home/stack/affect_overcloud_node.yaml
     block: |
       - hosts: overcloud
         become: true
         serial: 1
         gather_facts: true
         vars:
           rpms:
             - /home/stack/neutron_fix/iproute-4.11.0-26.el7.x86_64.rpm
             - /home/stack/neutron_fix/python2-pyroute2-0.5.2-4.el7ost.noarch.rpm
         tasks:
           - block:
             - name: Push rpms to the node
               copy:
                 src: "{{ item }}"
                 dest: /tmp/
               loop: "{{ rpms }}"
             - name: Make the list of packages
               set_fact:
                 packages: "{{ packages|default([]) + [item|join('')] }}"
               loop: "{{ []|zip_longest(rpms|map('basename'), fillvalue='/tmp/') | list}}"
             - name: Install the packages.
               package:
                 name: "{{ packages }}"
                 state: present
             - name: Reboot affected nodes
               debug:
                 msg: "REBOOT"
             - name: Reboot affected nodes
               shell: "sleep 10 && /sbin/shutdown -r now"
               async: 300
               poll: 0
             - name: waiting for server booting up
               wait_for:
                 port: 22
                 host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
                 search_regex: OpenSSH
                 delay: 10
               connection: local

#- name: Run playbook affect_overcloud_node.yaml 
#  ansible.builtin.shell: |
#    ansible-playbook -i inventory.yaml /home/stack/affect_overcloud_node.yaml
