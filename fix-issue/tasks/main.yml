- name: Tuning tripleo-client timeout
  ansible.builtin.replace:
    path: /usr/lib/python2.7/site-packages/tripleoclient/plugin.py
    regexp: '10000'
    replace: '43200'

- name: Tuning keystone timeout 
  ansible.builtin.shell: |
    sudo crudini --set /etc/keystone/keystone.conf token expiration 14400
    systemctl restart httpd
 
 - name: Keystone_token_expiration 
   ansible.builtin.blockinfile:
     path: /home/stack/templates/keystone_token.yaml
     block: |
       parameter_defaults:
         ControllerExtraConfig:
           keystone::token_expiration: 14400
           
 - name: Create neutron-fix-modify-images.yaml  
   ansible.builtin.blockinfile:
     path: /home/stack/templates/keystone_token.yaml
     block: |
       - hosts: undercloud
         serial: 1
         vars:
           - stack_name: overcloud
         tasks:
           - name: Get the environment output
             command: "openstack --os-cloud undercloud stack environment show {{ stack_name }}"
             register: os_env_cmd
           - name: save the environment as a hash
             set_fact:
               os_env: "{{ os_env_cmd.stdout | from_yaml }}"
           - name: Get dhcp image
             set_fact:
               images:
               - dhcp_image: "{{ os_env['parameter_defaults']['DockerNeutronDHCPImage'] }}"
               - l3_image: "{{ os_env['parameter_defaults']['DockerNeutronL3AgentImage'] }}"
               - meta_image:  "{{ os_env['parameter_defaults']['DockerNeutronMetadataImage'] }}"
           - name: Save it locally for retrieval for overcloud tasks
             copy:
               content: "{{ images | to_json }}"
               dest: /home/stack/os_neutron_images_to_fix.json
           - name: Create scripts to re-build the images, same name with new rpm.
             copy:
               content: |
                 #!/bin/bash
                 set -eu
                 echo "Doing {{ item.keys()|first }}"
                 /home/stack/osp13-patch-container-with-rpms.sh -n {{ item.values()|first }} -f {{ item.values()|first }} -d /home/stack/neutron_fix
               dest: "/home/stack/osp13-rebuild-{{ item.keys()|first }}.sh"
               mode: "0755"
             loop: "{{ images }}"
           - name: Run scripts to re-build the images, same name with new rpm.
             shell: "/home/stack/osp13-rebuild-{{ item.keys()|first }}.sh 2>&1 | tee /home/stack/osp13-rebuild-{{ item.keys()|first }}.log"
             loop: "{{ images }}"

      
 - name: Create add_overcloud_ansible_fact.yaml
    ansible.builtin.shell: cat > ~/add_overcloud_ansible_fact.yaml <<'EOF'
      - hosts: overcloud
        become: true
        serial: 25
        gather_facts: false
        tasks:
          - name: Add directory to support local dynamic facts.
            file:
              path: "/etc/ansible/facts.d"
              state: directory
              mode: "0755"
          - name: Add local fact to discover if node is affected
            copy:
              content: |
                #!/bin/bash
                if [ -d /var/run/netns ]; then
                if ls -l /var/run/netns | grep -q -- '----------.'; then
                  echo '{"netns_issue": true }'
                  exit 0
                fi
                fi
                echo '{"netns_issue": false }'
              dest: /etc/ansible/facts.d/netns.fact
              mode: 0755
         EOF

      
  - name: Create ansible static inventory
    shell: |
      source ~/stackrc
      tripleo-ansible-inventory --ansible_ssh_user heat-admin --static-yaml-inventory ~/inventory.yaml

        
  - name: Run ansible
    shell: |
      ansible -i inventory.yaml '*' -m setup -a 'filter="ansible_local" gather_subset=facter' | awk 'match($0,/^([^|]+) \| SUCCESS/,line) {host=line[1];next}/netns_issue/{affected=$2;print host " is affected: " affected;host="";next}'

      
  - name: Install additional packages
    shell: |
      rpm -qa |grep -I “tmux\|crudini”
      yum -y install tmux crudini 
      
  - name: View environment file
    shell: |
      cat /etc/environment
    register: results
  - debug:
      var: results.stdout_lines

  - name: View docker proxy
    shell: |
      cat /etc/systemd/system/docker.service.d/http-proxy.conf
    register: results
  - debug:
      var: results.stdout_lines
      
  - name: View Red Hat Subscription Manager conf
    shell: |
      cat /etc/rhsm/rhsm.conf
    register: results
  - debug:
      var: results.stdout_lines

  - name: View Selinux conf
    shell: |
      cat /etc/selinux/config
    register: results
  - debug:
      var: results.stdout_lines
 
  - name: Edit the value of the ttl parameter
    replace:
      path: /usr/lib/python2.7/site-packages/tripleoclient/plugin.py
      regexp: '10000'
      replace: '43200'
      
  - name: Data plane connectivity loss due to a stale namespaces issue
    ansible.builtin.shell: cat > ~/add_overcloud_ansible_fact.yaml <<'EOF'
          - hosts: undercloud
            serial: 1
            vars:
              - stack_name: overcloud
            tasks:
              - name: Get the environment output
                command: "openstack --os-cloud undercloud stack environment show {{ stack_name }}"
                register: os_env_cmd
              - name: save the environment as a hash
                set_fact:
                  os_env: "{{ os_env_cmd.stdout | from_yaml }}"
              - name: Get dhcp image
                set_fact:
                  images:
                    - dhcp_image: "{{ os_env['parameter_defaults']['DockerNeutronDHCPImage'] }}"
                    - l3_image: "{{ os_env['parameter_defaults']['DockerNeutronL3AgentImage'] }}"
                    - meta_image:  "{{ os_env['parameter_defaults']['DockerNeutronMetadataImage'] }}"
              - name: Save it locally for retrieval for overcloud tasks
                copy:
                  content: "{{ images | to_json }}"
                  dest: /home/stack/os_neutron_images_to_fix.json

              - name: Create scripts to re-build the images, same name with new rpm.
                copy:
                  content: |
                    #!/bin/bash
                    set -eu
                    echo "Doing {{ item.keys()|first }}"
                    /home/stack/osp13-patch-container-with-rpms.sh -n {{ item.values()|first }} -f {{ item.values()|first }} -d /home/stack/neutron_fix
                  dest: "/home/stack/osp13-rebuild-{{ item.keys()|first }}.sh"
                  mode: "0755"
                  loop: "{{ images }}"

              - name: Run scripts to re-build the images, same name with new rpm.
                shell: "/home/stack/osp13-rebuild-{{ item.keys()|first }}.sh 2>&1 | tee /home/stack/osp13-rebuild-{{ item.keys()|first }}.log"
                loop: "{{ images }}"
                
  - name: Run playbook
    shell:
      ansible-playbook -i inventory.yaml neutron-fix-modify-images.yaml
